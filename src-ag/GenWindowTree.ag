
SET All = WindowRoot WindowTree Element WindowTrees Lines Line 

-- Distributing the initial contaning block (icb), url function and baseurl
ATTR All [ cb: {WX.Window a}
           goToURL: {\url -> IO()}
           baseurl: String
         ||]

-- Distributing an url between children
ATTR All - WindowRoot [linkURL: {Maybe String} ||]
SEM WindowRoot
    | WindowRoot windowTree.linkURL = Nothing

SEM WindowTree
    | WindowItemContainer
        loc.linkURL = case Map.lookup "href" @attrs of
                        Just url -> Just url
                        Nothing  -> case @lhs.linkURL of
                                        Just url -> Just url
                                        Nothing  -> Nothing
        elem.linkURL = @loc.linkURL
    | WindowContainer 
        loc.linkURL = case Map.lookup "href" @attrs of
                        Just url -> Just url
                        Nothing  -> case @lhs.linkURL of
                                        Just url -> Just url
                                        Nothing  -> Nothing
        elem.linkURL = @loc.linkURL
    | WindowText 
        loc.linkURL = case Map.lookup "href" @attrs of
                        Just url -> Just url
                        Nothing  -> case @lhs.linkURL of
                                        Just url -> Just url
                                        Nothing  -> Nothing

-- Building the tree of windows
ATTR WindowRoot WindowTree [ || result: {WX.Window a -> IO()}]
SEM WindowTree
    | WindowItemContainer
        lhs.result = \cb -> do case @marker of
                                    Numering str -> boxMarker str cb @loc.markerPosition @sizeMarker Full @props @attrs False
                                    Glyph   name -> let attrs' = Map.insert "src" (name ++ ".png") @attrs
                                                    in boxMarker "" cb @loc.markerPosition @sizeMarker Full @props attrs' True
                                    NoMarker     -> return ()
                               cbox <- boxContainer cb @loc.position @loc.size Full @props @attrs False
                               mapM_ (\f -> f cbox) @elem.result
    | WindowContainer 
        lhs.result = \cb -> do cbox <- boxContainer cb @loc.position @loc.size @tCont @props @attrs @bRepl
                               mapM_ (\f -> f cbox) @elem.result
    | WindowText
        lhs.result = \cb -> do cbox <- box @text cb @loc.position @loc.size @tCont @props @attrs False
                               case @loc.linkURL of
                                    Just url -> let url' = if isAbsolute url
                                                           then url
                                                           else if isHostRelative url
                                                                then @lhs.baseurl        ++ url
                                                                else @lhs.baseurl ++ "/" ++ url
                                                in WX.set cbox [WX.on WX.focus WX.:= onClick @lhs.goToURL url']
                                    Nothing   -> return ()

ATTR Element Lines Line [ || result USE {++} {[]} : {[WX.Window a -> IO()]}]
ATTR WindowTrees [ || result USE {:} {[]}: {[WX.Window a -> IO()]}]

{
onClick function url bool
    = if bool
      then function url
      else return ()
}

