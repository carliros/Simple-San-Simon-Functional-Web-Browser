imports{
-- libraries
import Graphics.UI.WXCore hiding (empty)
import Graphics.UI.WX hiding (text, empty, get)

--import UU.Pretty
import qualified Data.Map as Map
import System.IO.Unsafe
import Data.List
import Data.Char

-- user types and functions
import FSTreeFase2
import Process.CssBox
import Data.Property
import Parser.Propiedades
import Data.DataTreeCSS
import Process.DownloadProcess
import Utils.Utiles

import Data.CommonTypes
}

-- datatypes Formatting Structure Fase 1
DATA BoxRoot
    | BoxRoot boxtree: BoxTree

DATA BoxTree
    | BoxItemContainer
        props: {Map.Map String Property}
        attrs: {Map.Map String String} 
        boxes: Boxes
    | BoxContainer
        name : String
        fcnxt: {FormattingContext}
        props: {Map.Map String Property}
        bRepl: Bool
        attrs: {Map.Map String String}
        boxes: Boxes
    | BoxText
        name : String
        props: {Map.Map String Property}
        attrs: {Map.Map String String}
        text : String

TYPE Boxes = [BoxTree]

-- instances
SET InstancesShow = * - Code
DERIVING InstancesShow: Show

INCLUDE "DoUsedValue.ag"
INCLUDE "BuildLines.ag"
INCLUDE "ListMarker.ag"

-- Going from Fase 1 to the Fase 2
ATTR Boxes [|| boxtree USE {:} {[]}:{[WindowTree]}]
ATTR BoxRoot BoxTree [|| boxtree: {WindowTree} ]
SEM BoxTree
    | BoxItemContainer
        lhs.boxtree
            = WindowItemContainer (fst @loc.marker) @lhs.maxMarkerDim (EWinds @boxes.boxtree) @loc.usedValueProps @attrs
    | BoxContainer 
        lhs.boxtree 
            = let display = @loc.usedValueProps Map.! "display"
              in case computedValue (propertyValue display) of
                    KeyValue "block"
                        -> case @fcnxt of
                                InlineContext -> WindowContainer @name InlineContext @loc.usedValueProps @attrs Full @bRepl (ELines @loc.lines)
                                otherwise     -> WindowContainer @name @fcnxt @loc.usedValueProps @attrs Full @bRepl (EWinds @boxes.boxtree)
                    KeyValue "inline"
                        -> case @fcnxt of
                                InlineContext -> WindowContainer @name InlineContext @loc.usedValueProps @attrs Full @bRepl (EWinds @boxes.boxtree)
                                _             -> error $ "[fstree fase 1] unexpected fcontext value: " ++ show @fcnxt
                    otherwise 
                        -> error $ "???: " ++ show display
    | BoxText
        lhs.boxtree = WindowText @name @loc.usedValueProps @attrs Full @text

{
-- interface
processFSTree1 fstree = sem_BoxRoot (BoxRoot fstree)
}
