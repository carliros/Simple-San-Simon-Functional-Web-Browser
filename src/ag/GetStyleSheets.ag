
-- Geting Style Sheets from source
ATTR NTree NTrees [|| rules USE {++} {[]}: {[([Selector], Property, Int)]}]

ATTR NTree NTrees [iamstylenode: Bool ||]
SEM Root
    | Root ntree.iamstylenode = False
SEM NTree
    | NTree ntrees.iamstylenode 
                        = case @node.myself of
                            NTag "style" _ _ -> True
                            otherwise        -> False
            loc.myrules = case @node.myself of
                            NTag name _ attrs -> case Map.lookup "style" attrs of
                                                    Just str -> parseStyleInline name str
                                                    Nothing  -> []
                            otherwise         -> []
            lhs.rules   = let nsel = case @node.myself of
                                        NText str -> if @lhs.iamstylenode 
                                                     then parseStyleString str
                                                     else []
                                        otherwise -> []
                          in nsel ++ @ntrees.rules

-- making an attribute for and getting the default html4 style sheet
ATTR Root [defaultcss4html:{[([Selector], Property, Int)]} ||]

-- Redistributing the selector's list
ATTR NTrees NTree [ css:{[([Selector], Property, Int)]} ||]
SEM Root
    | Root ntree.css = @ntree.rules ++ @lhs.defaultcss4html

-- all style sheet for each tree's element
SEM NTree
    | NTree loc.myStyleRules = @loc.myrules ++ @lhs.css
 
