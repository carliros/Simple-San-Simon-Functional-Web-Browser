
SET All = WindowRoot WindowTree Element WindowTrees Lines Line 

-- Distributing the initial contaning block (icb), url function and baseurl
ATTR All [ cb: {WX.Window a}
           goToURL: {\url -> IO()}
           baseurl: String
         ||]

-- Distributing an url between children
ATTR All - WindowRoot [linkURL: {Maybe String} ||]
SEM WindowRoot
    | WindowRoot windowTree.linkURL = Nothing

SEM WindowTree
    | WindowContainer 
            loc.linkURL = case Map.lookup "href" @attrs of
                            Just url -> Just url
                            Nothing  -> case @lhs.linkURL of
                                            Just url -> Just url
                                            Nothing  -> Nothing
            elem.linkURL = @loc.linkURL
    | WindowText 
            loc.linkURL = case Map.lookup "href" @attrs of
                            Just url -> Just url
                            Nothing  -> case @lhs.linkURL of
                                            Just url -> Just url
                                            Nothing  -> Nothing

-- Building the tree of windows
ATTR WindowRoot WindowTree [|| result: {WX.Window a -> IO()}]
SEM WindowTree
    | WindowContainer 
        lhs.result = \cb -> do cbox <- boxContainer cb @loc.position @loc.size @tCont @props @attrs @bRepl
                               mapM_ (\f -> f cbox) @elem.results
    | WindowText
        lhs.result = \cb -> do cbox <- box @text cb @loc.position @loc.size @tCont @props @attrs False
                               case @loc.linkURL of
                                    Just url -> let url' = if isAbsolute url
                                                           then url
                                                           else if isHostRelative url
                                                                then @lhs.baseurl        ++ url
                                                                else @lhs.baseurl ++ "/" ++ url
                                                in WX.set cbox [WX.on WX.focus WX.:= onClick @lhs.goToURL url']
                                    Nothing   -> return ()

ATTR Element WindowTrees Lines Line [|| results : {[WX.Window a -> IO()]}]

SEM Element
    | EWinds   lhs.results = @winds.results
    | ELines   lhs.results = @lines.results
    | ENothing lhs.results = []

SEM WindowTrees
    | Cons lhs.results = (\cb -> @hd.result cb) : @tl.results
    | Nil  lhs.results = []

SEM Lines
    | Cons lhs.results = @hd.results ++ @tl.results
    | Nil  lhs.results = []

{
onClick function url bool
    = if bool
      then function url
      else return ()
}

